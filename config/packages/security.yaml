security:
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        App\Entity\User: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        users:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        login:
            pattern: /auth
            stateless: true
            login_throttling:
                max_attempts: 5
            json_login:
                check_path: /auth # The name in routes.yaml is enough for mapping
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        dev:
            pattern: ^/_(profiler|wdt)
            security: false
        api:
            pattern:   ^/api
            stateless: true
            jwt: ~
        main:
            json_login:
                check_path: /auth # The name in routes.yaml is enough for mapping
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

    role_hierarchy:
        ROLE_USER: []
        ROLE_MODERATOR: [ROLE_USER]
        ROLE_ADMIN: [ROLE_MODO]

    access_control:
        - { path: ^/api/docs, roles: PUBLIC_ACCESS } # Allows accessing API documentations and Swagger UI docs
        - { path: ^/auth, roles: PUBLIC_ACCESS }
        - { path: ^/api/ressources, methods: GET, roles: PUBLIC_ACCESS}
        - { path: ^/api/createAccount, roles: PUBLIC_ACCESS}
        - { path: ^/api/ressource_types,  methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/ressource_categories,  methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/relation_types,  methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/ressources, methods: [POST, PATCH],  roles: ROLE_USER}
        - { path: ^/api/ressources/accept, roles: ROLE_MODERATOR}
        - { path: ^/api/comments/accept, roles: ROLE_MODERATOR}
        - { path: ^/api/ressource_types/accept, roles: ROLE_MODERATOR}
        - { path: ^/api/comments/accept, roles: ROLE_MODERATOR}
        - { path: ^/api/ressource_types,  methods: [POST, PATCH], roles: ROLE_MODERATOR}
        - { path: ^/api/ressource_categories,  methods: [POST, PATCH], roles: ROLE_MODERATOR}
        - { path: ^/api/relation_types,  methods: [POST, PATCH], roles: ROLE_MODERATOR}
        - { path: ^/api/users, roles: ROLE_USER }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In Tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon

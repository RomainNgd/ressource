name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Déclenchement sur la branche "main"
  pull_request:
    branches:
      - main  # Déclenchement sur les PR vers "main"

jobs:
  build-and-test:
    name: Build, Test, and Lint
    runs-on: docker-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d

      - name: Wait for services to be ready
        run: |
          sleep 10  # Pause pour s'assurer que les services sont prêts

      - name: Run database migrations
        run: docker exec -it symfony_app php bin/console doctrine:migrations:migrate --no-interaction

      - name: Load database fixtures
        run: docker exec -it symfony_app php bin/console doctrine:fixtures:load --env=dev --no-interaction

      - name: Run PHP-CS-Fixer (Lint and Format)
        run: docker exec -it symfony_app php vendor/bin/php-cs-fixer fix --dry-run --diff --env=dev

      - name: Run PHPUnit Tests
        run: docker exec -it symfony_app php bin/phpunit --env=dev

      - name: Stop Docker Compose
        run: docker-compose down

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'  # Seulement sur la branche "main" et si les tests passent

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy using Deployer
        run: |
          php vendor/bin/dep deploy production
